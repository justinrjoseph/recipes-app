testing specs for recipes:
name: string
summary: text
description

- name must be present
- name must be between 5 and 99 characters
- summary must be present
- summary must be bewteen 10 and 149 characters
- description must be present
- description must be between 20 and 500 characters
- chef_id must be present

testing specs for chefs:
chefname: string
email: string

- chefname must be present
- chefname must be between 3 and 40 characters
- email must be present
- email must be unique
- email be valid

-------------------------------------------------------------------------------------

Chefs:

What we have already:
- model and validations
- database table with columns chefname and email

What we need to add:
- passwords to the chefs table so chefs can be authenticated and logged in
- use email as login credential, since email is unique
- ability to register new chefs
- ability to display chefs' profiles
- ability to list chefs
- ability to chefs to log in and out
- restrict actions like create/edit recipe and like system to chefs who are logged in
- restrict edit of recipes to chefs who created them

-------------------------------------------------------------------------------------

Authentication updates:

- show recipe page: ability to edit/update only your recipes
- navigation partial: toggle menu, restrict new
- restrict thumbs up and thumbs down to logged in users
- recipe: update to current_user
- like: update to current_user
- before_action: :require_user, except: [:show, :index]
- before_action: :require_same_user for chefs, only: [:edit, :update]

-------------------------------------------------------------------------------------

M2M Associations:

1. We will implement using has_many through: associations
2. Requires a join table
3. One object/row in one table can be associated with multiple rows in a second table and vice-versa